<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="WAGO" productName="e!COCKPIT" productVersion="e!COCKPIT" creationDateTime="2019-10-29T12:22:40.6578022" />
  <contentHeader name="CoDeSys External Library Template" version="3.5.5.30" modificationDateTime="2019-10-24T14:40:07.960949" organization="3S - Smart Software Solutions GmbH" author="3S - Smart Software Solutions GmbH">
    <Comment>Library project template with all possible element types, docu and a sample project structure</Comment>
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation>
          <property name="Author" type="string">3S - Smart Software Solutions GmbH</property>
          <property name="Company" type="string">3S - Smart Software Solutions GmbH</property>
          <property name="DefaultNamespace" type="string">TMP</property>
          <property name="Description" type="string">Library project template with all possible element types, docu and a sample project structure</property>
          <property name="IsEndUserLibrary" type="boolean">false</property>
          <property name="LanguageModelAttribute" type="string">qualified-access-only</property>
          <property name="Placeholder" type="string">PlaceholderTemplate</property>
          <property name="Project" type="string">SOLWENA_Biblioteka - MASTER</property>
          <property name="Title" type="string">CoDeSys External Library Template</property>
          <property name="Version" type="version">3.5.5.30</property>
          <property name="library-category-list" type="library-category-list">Intern|CAA|Guidelines</property>
        </ProjectInformation>
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous>
      <pou name="fbModbusOdczytZapis" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="intModbusOdczytZapisZadanieRozmiar">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Rozmiar tablicy danych modbusa</xhtml>
              </documentation>
            </variable>
            <variable name="xOdczytajRejestr">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Żądanie odczytania rejestru</xhtml>
              </documentation>
            </variable>
            <variable name="bAdresOdczyt">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="2#101000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Adres urządzenia, z którego ma zostać dokonany odczyt</xhtml>
              </documentation>
            </variable>
            <variable name="uiAdresRejestruOdczyt">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="2010" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Adres rejestru, z którego ma zostać dokonany odczyt</xhtml>
              </documentation>
            </variable>
            <variable name="xZapiszRejestr">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Żądanie zapisania rejestru</xhtml>
              </documentation>
            </variable>
            <variable name="bAdresZapis">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Adres urządzenia, na który ma zostać dokonany zapis</xhtml>
              </documentation>
            </variable>
            <variable name="uiAdresRejestruZapis">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Adres rejestru, na który ma zostać dokonany zapis</xhtml>
              </documentation>
            </variable>
            <variable name="wZawartoscRejestruZapis">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Dane do zapisu</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="arModbusOdczytCykliczny">
              <type>
                <array>
                  <dimension lower="1" upper="5000" />
                  <baseType>
                    <derived name="typModbusOdczytCykliczny" />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="arModbusOdczytZapisZadanie">
              <type>
                <array>
                  <dimension lower="1" upper="1000" />
                  <baseType>
                    <derived name="typModbusOdczytZapisZadanie" />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="intModbusOdczytZapisZadanieZnacznikZapisu">
              <type>
                <INT />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="tMinimalnyCzasRaportowania">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#15s0ms" />
              </initialValue>
            </variable>
            <variable name="intPetlaPierwszySkan">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="wZawartoscRejestruOdczyt">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Zawartość odczytanego rejestru</xhtml>
              </documentation>
            </variable>
            <variable name="xPierwszyCykl">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Pierwszy cykl programu</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*			
Autor:					Artur Wyszomirski, 2019-10-11 
Prawa majątkowe: 		Solwena Sp. z o.o., 
Aktualizacje:			2019-10-22: - dodanie wyszukiwania wolnego miejsca w tablicy arModbusOdczytCykliczny
									- wprowadzenie domyślnych wartości dla bAdresOdczyt i uiAdresRejestruOdczyt
									- przypisywanie wartości ltCzestotliwosc i pZmiennaReferencyjna w pierwszym cyklu programu

Opis:					Odczyt i zapis dowolnego rejestru Modbus				
*)

// Pierwszy cykl programu
IF xPierwszyCykl THEN
	WHILE arModbusOdczytCykliczny[intPetlaPierwszySkan].bAdresUrzadzenia &lt;&gt; 0 DO
		intPetlaPierwszySkan := intPetlaPierwszySkan + 1;
	END_WHILE
END_IF

// Odczyt
IF xPierwszyCykl THEN
	arModbusOdczytCykliczny[intPetlaPierwszySkan].ltCzestotliwosc := TIME_TO_LTIME(tMinimalnyCzasRaportowania);
	arModbusOdczytCykliczny[intPetlaPierwszySkan].pZmiennaReferencyjna := ADR(wZawartoscRejestruOdczyt);
END_IF
IF xOdczytajRejestr OR xPierwszyCykl THEN
	arModbusOdczytCykliczny[intPetlaPierwszySkan].bAdresUrzadzenia := bAdresOdczyt;
	arModbusOdczytCykliczny[intPetlaPierwszySkan].bFunkcja := TO_BYTE(enumModbusKodyFunkcji.OdczytNRejestrow);
	arModbusOdczytCykliczny[intPetlaPierwszySkan].uiAdresRejestru := uiAdresRejestruOdczyt;

END_IF

// Zapis
IF xZapiszRejestr THEN
	fnModbusZapisRejestru(	bAdresUrzadzenia := bAdresZapis,
							bFunkcja := INT_TO_BYTE(enumModbusKodyFunkcji.ZapisRejestru),
							uiAdresRejestru := uiAdresRejestruZapis,
							pZmiennaReferencyjna := 0,
							wWartoscDoZapisania := wZawartoscRejestruZapis,
							intModbusOdczytZapisZadanieRozmiar := intModbusOdczytZapisZadanieRozmiar,
							arModbusOdczytZapisZadanie := arModbusOdczytZapisZadanie,
							intModbusOdczytZapisZadanieZnacznikZapisu := intModbusOdczytZapisZadanieZnacznikZapisu);
END_IF
	
xPierwszyCykl := FALSE;</xhtml>
          </ST>
        </body>
        <addData />
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
</project>